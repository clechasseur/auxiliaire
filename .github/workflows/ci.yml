name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CI: 1

jobs:
  clippy:
    name: Clippy validation
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust with clippy
        uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1.14.1
        with:
          toolchain: stable
          components: clippy
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          prefix-key: v2-rust
          cache-on-failure: true

      - name: Run clippy
        uses: clechasseur/rs-clippy-check@ff884e6d84447e8bb55fa0a6510e058e0c40be19 # v4.0.5
        with:
          args: --workspace --all-targets --feature-powerset -- -D warnings
          tool: cargo-hack
          cache-key: v1-clippy

  fmt:
    name: Rustfmt check
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust nightly with rustfmt
        uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1.14.1
        with:
          toolchain: nightly
          components: rustfmt
          cache: false

      - name: Run Rustfmt
        uses: clechasseur/rs-fmt-check@b821b41cc907be559e0596ec6cf657ed627268cc # v2.0.11
        with:
          args: --all

  msrv-check:
    name: MSRV check on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-14, windows-2022 ]
        toolchain: [ 1.83.0 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust nightly and ${{ matrix.toolchain }}
        uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1.14.1
        with:
          toolchain: nightly,${{ matrix.toolchain }}
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          prefix-key: v10-rust
          key: msrv-pins-files-${{ hashFiles('**/msrv-pins.toml') }}
          cache-on-failure: true

      - name: Install required tools
        uses: taiki-e/install-action@7fe7b8c79a3c5569643cf27dfc32456883a4cd4d # v2.62.16
        with:
          tool: just@1.40.0,cargo-hack@0.6.36,cargo-minimal-versions@0.1.30,cargo-msrv-prep@2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run checks using cargo-minimal-versions
        run: just toolchain=${{ matrix.toolchain }} check-minimal

  build:
    name: Build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-14, windows-2022 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1.14.1
        with:
          toolchain: stable
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          prefix-key: v4-rust
          cache-on-failure: true

      - name: Install required tools
        uses: taiki-e/install-action@7fe7b8c79a3c5569643cf27dfc32456883a4cd4d # v2.62.16
        with:
          tool: just@1.40.0,cargo-hack@0.6.36
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run checks on feature powerset
        run: just check-powerset

      - name: Run tests
        run: just test

  llvm-cov:
    name: Code coverage with llvm-cov
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust nightly
        uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1.14.1
        with:
          toolchain: nightly
          cache: false

      - name: Install required tools
        uses: taiki-e/install-action@7fe7b8c79a3c5569643cf27dfc32456883a4cd4d # v2.62.16
        with:
          tool: just@1.40.0,cargo-llvm-cov@0.6.16
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run cargo-llvm-cov
        run: just llvm-cov

      - name: Upload code coverage results to codecov.io
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          fail_ci_if_error: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: llvm-cov-code-coverage-report
          path: |
            codecov.json
            target/llvm-cov/html/

  doc:
    name: Rustdoc check
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust nightly
        uses: actions-rust-lang/setup-rust-toolchain@ac90e63697ac2784f4ecfe2964e1a285c304003a # v1.14.1
        with:
          toolchain: nightly
          cache: false

      - name: Install just
        uses: taiki-e/install-action@7fe7b8c79a3c5569643cf27dfc32456883a4cd4d # v2.62.16
        with:
          tool: just@1.40.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate doc using rustdoc
        run: just doc
