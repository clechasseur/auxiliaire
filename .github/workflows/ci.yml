name: CI

on:
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CI: 1

jobs:
  clippy:
    name: Clippy validation
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust with clippy
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: stable
          components: clippy
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: v2-rust
          cache-on-failure: true

      - name: Run clippy
        uses: clechasseur/rs-clippy-check@23f6dcf86d7e4e0d98b000bba0bb81ac587c44aa # v4.0.2
        with:
          args: --workspace --all-targets --feature-powerset -- -D warnings
          tool: cargo-hack
          cache-key: v1-clippy

  fmt:
    name: Rustfmt check
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust nightly with rustfmt
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: nightly
          components: rustfmt
          cache: false

      - name: Run Rustfmt
        uses: clechasseur/rs-fmt-check@e1bd0f5c24ced02542ed905bde212ffc9c324863 # v2.0.8
        with:
          args: --all

  msrv-check:
    name: MSRV check for Rust ${{ matrix.toolchain }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-14, windows-2022 ]
        toolchain: [ 1.83.0 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust nightly and ${{ matrix.toolchain }}
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: nightly,${{ matrix.toolchain }}
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: v10-rust
          key: msrv-pins-files-${{ hashFiles('**/msrv-pins.toml') }}
          cache-on-failure: true

      - name: Install required tools
        uses: taiki-e/install-action@d4635f2de61c8b8104d59cd4aede2060638378cc # v2.49.45
        with:
          tool: just,cargo-hack,cargo-minimal-versions,cargo-msrv-prep
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run checks using cargo-minimal-versions
        run: just toolchain=${{ matrix.toolchain }} check-minimal

  build:
    name: Build for Rust ${{ matrix.toolchain }}${{ matrix.experimental && ' (experimental)' || '' }} on ${{ matrix.os }}${{ matrix.ignore-lock && ' without Cargo.lock' || '' }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ 1.83.0, stable, beta, nightly ]
        os: [ ubuntu-24.04, macos-14, windows-2022 ]
        ignore-lock: [ false, true ]
        include:
          - experimental: false
          - toolchain: beta
            experimental: true
          - toolchain: nightly
            experimental: true
        exclude:
          - toolchain: 1.83.0
            ignore-lock: true
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Remove Cargo.lock
        if: ${{ matrix.ignore-lock }}
        run: rm Cargo.lock

      - name: Install Rust ${{ matrix.toolchain }}
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: ${{ matrix.toolchain }}
          cache: false

      - name: Rust Cache
        if: ${{ !matrix.experimental }}
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: v3-rust
          key: ignore-lock-${{ matrix.ignore-lock }}
          cache-on-failure: true

      - name: Install required tools
        uses: taiki-e/install-action@d4635f2de61c8b8104d59cd4aede2060638378cc # v2.49.45
        with:
          tool: just,cargo-hack
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run checks on feature powerset
        run: just check-powerset

      - name: Run tests
        run: just test

  llvm-cov:
    name: Code coverage with llvm-cov
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust nightly
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: nightly
          cache: false

      - name: Install required tools
        uses: taiki-e/install-action@d4635f2de61c8b8104d59cd4aede2060638378cc # v2.49.45
        with:
          tool: just,cargo-llvm-cov
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run cargo-llvm-cov
        run: just llvm-cov

      - name: Upload code coverage results to codecov.io
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          fail_ci_if_error: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: llvm-cov-code-coverage-report
          path: |
            codecov.json
            target/llvm-cov/html/

  doc:
    name: Rustdoc check for Rust ${{ matrix.toolchain }}${{ matrix.experimental && ' (experimental)' || '' }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ stable, nightly ]
        include:
          - experimental: false
          - toolchain: nightly
            experimental: true
    runs-on: ubuntu-24.04
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust ${{ matrix.toolchain }}
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: ${{ matrix.toolchain }}
          cache: false

      - name: Rust Cache
        if: ${{ !matrix.experimental }}
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: v2-rust
          cache-targets: false
          cache-on-failure: true

      - name: Install just
        uses: taiki-e/install-action@d4635f2de61c8b8104d59cd4aede2060638378cc # v2.49.45
        with:
          tool: just
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate doc using rustdoc
        run: just doc
